########################################################################
# Digitize Trigger source
# Desc: Digitize trigger option.

# Digitize trigger source
record(mbbo, "$(P)$(R)SampleTrg-Sel"){
  field(DESC, "Digitize trigger source")
  field(ZRST, "None")
  field(ONST, "External")
  field(TWST, "InLevel")
}

# Configuration reset used by download
record(bo, "$(P)$(R)SampleTrgRst"){
  field(ASG, "Reserved")
  field(DESC, "Digtze trg reset used in download")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(HIGH, "5")
  field(VAL, "0")
}

# Trigger source selection branch index calc
record(calcout, "$(P)$(R)SampleTrgCalc"){
  field(ASG, "Reserved")
  field(DESC, "Digtze trg branch index calc")
  field(SCAN, "5 second")
  field(INPA, "$(P)$(R)SampleTrg-Sel.VAL")
  field(INPB, "$(P)$(R)SampleTrgRst.VAL")
  field(CALC, "B=0?(A+1):0")
  field(OOPT, "On Change")
  field(VAL, "7")						# Initialize in a nonexistent state
  field(OUT, "$(P)$(R)SampleTrgFout.PROC")
}

# Fanout selects config branch to be executed
record(fanout, "$(P)$(R)SampleTrgFout"){
  field(ASG, "Reserved")
  field(DESC, "Digtze trg source config selection")
  field(SELM, "Specified")
  field(SELL, "$(P)$(R)SampleTrgCalc.VAL")
  field(LNK1, "$(P)$(R)ConfigNone")
  field(LNK2, "$(P)$(R)ConfigEx")
  field(LNK3, "$(P)$(R)ConfigLvl")
}

# Settings for digitize external triggering
record(sseq, "$(P)$(R)ConfigEx"){
  field(ASG, "Reserved")
  field(DESC, "Settings for digitize external trg")
  field(SELM, "All")
  field(STR1, "EXTERNAL")
  field(STR2, "ON")
  field(STR3, "ON")
  field(STR4, ".1 second")
  field(LNK1, "$(Instrument)Timer1Stim-Sel PP")			# Timer 1 stimulus = EXTERNAL
  field(LNK2, "$(Instrument)Timer1Enbl-Sel PP")			# Timer 1 enable = ON
  field(LNK3, "$(Instrument)ClrBuff1-Cmd PP")			# Clear buffer
  field(LNK4, "$(Instrument)CntBuff1-Mon.SCAN")			# Buffer count scan triggers buffer readings
}

# Settings for digitize threshold triggering
record(sseq, "$(P)$(R)ConfigLvl"){
  field(ASG, "Reserved")
  field(DESC, "Settings for digitize threshold trg")
  field(SELM, "All")
  field(STR1, "ANALOGTRIGGER")
  field(STR2, "ON")
  field(STR3, "ON")
  field(STR4, ".1 second")
  field(LNK1, "$(Instrument)Timer1Stim-Sel PP")			# Timer 1 stimulus = ANALOGTRIGGER
  field(LNK2, "$(Instrument)Timer1Enbl-Sel PP")			# Timer 1 enable = ON
  field(LNK3, "$(Instrument)ClrBuff1-Cmd PP")			# Clear buffer
  field(LNK4, "$(Instrument)CntBuff1-Mon.SCAN")			# Buffer count scan triggers buffer readings
}

# Settings for disabling digitize trigger
record(sseq, "$(P)$(R)ConfigNone"){
  field(ASG, "Reserved")
  field(DESC, "Settings for NO digitize trigger")
  field(SELM, "All")
  field(STR1, "OFF")
  field(STR2, "NONE")
  field(STR3, "Passive")
  field(STR4, "ON")
  field(LNK1, "$(Instrument)Timer1Enbl-Sel PP")			# Timer 1 enable = OFF
  field(LNK2, "$(Instrument)Timer1Stim-Sel PP")			# Timer 1 stimulus = NONE
  field(LNK3, "$(Instrument)CntBuff1-Mon.SCAN")			# Disable buffer count scan and periodic readings
  field(LNK4, "$(Instrument)ClrBuff1-Cmd PP")			# Clear buffer
}

# Check digitize trigger configuration and update Sts
record(scalcout, "$(P)$(R)ConfCheck1"){
  field(ASG, "Reserved")
  field(DESC, "Check calc 1 for digtze trigger config")
  field(INAA, "$(Instrument)Timer1Enbl-Sts CPP")
  field(INBB, "$(Instrument)CntBuff1-Mon.SCAN CPP")
  field(INCC, "$(Instrument)Timer1Stim-Sts CPP")
  field(CALC, "(AA=='ON'&&BB=='.1 second'&&CC=='EXTERNAL')?1:0")
  field(FLNK, "$(P)$(R)ConfCheck2")
}

record(scalcout, "$(P)$(R)ConfCheck2"){
  field(ASG, "Reserved")
  field(DESC, "Check calc 2 for digtze trigger config")
  field(INPA, "$(P)$(R)ConfCheck1.VAL")
  field(INBB, "$(Instrument)Timer1Enbl-Sts")
  field(INCC, "$(Instrument)CntBuff1-Mon.SCAN")
  field(INDD, "$(Instrument)Timer1Stim-Sts")
  field(CALC, "(A=0&&BB=='ON'&&CC=='.1 second'&&DD=='ANALOGTRIGGER')?2:A")
  field(FLNK, "$(P)$(R)ConfCheck3")
}

record(scalcout, "$(P)$(R)ConfCheck3"){
  field(ASG, "Reserved")
  field(DESC, "Check calc 3 for digtze trigger config")
  field(INPA, "$(P)$(R)ConfCheck2.VAL")
  field(INBB, "$(Instrument)Timer1Enbl-Sts")
  field(INCC, "$(Instrument)CntBuff1-Mon.SCAN")
  field(INDD, "$(Instrument)Timer1Stim-Sts")
  field(CALC, "(A=0&&BB=='OFF'&&CC=='Passive'&&DD=='NONE')?3:A")
  field(FLNK, "$(P)$(R)ConfCheck4")
}

record(scalcout, "$(P)$(R)ConfCheck4"){
  field(ASG, "Reserved")
  field(DESC, "Check calc 4 for digtze trigger config")
  field(INPA, "$(P)$(R)ConfCheck3.VAL")
  field(CALC, "A=1?'External':(A=2?'InLevel':(A=3?'None':'Unknown'))")
  field(OUT, "$(P)$(R)SampleTrg-Sts PP")
}

# Digitize trigger source status
record(mbbi, "$(P)$(R)SampleTrg-Sts"){
  field(ASG, "Reserved")
  field(DESC, "Digitize trigger source Sts")
  field(ZRST, "Unknown")
  field(ONST, "External")
  field(TWST, "InLevel")
  field(THST, "None")
}

########################################################################
# Timer configuration
# Desc: Timer used for triggering the second group of measurements.

# Timer delay (high level)
record(ao, "$(P)$(R)2ndReadDly-SP"){
  field(DESC, "2nd reading start delay")
  field(DRVH, "100000")
  field(DRVL, "0.000008")
  field(PREC, "6")
  field(EGU, "seconds")
  field(VAL, "0.016667")
  field(OUT, "$(Instrument)Timer1Dly-SP PP")
}

# Timer delay RB (high level)
record(ai, "$(P)$(R)2ndReadDly-RB"){
  field(ASG, "Reserved")
  field(DESC, "2nd reading start delay RB")
  field(PREC, "6")
  field(EGU, "seconds")
  field(INP, "$(Instrument)Timer1Dly-RB CPP")
}

########################################################################
# Charge Measurement
# Desc: Charge measurement reading procedure.

# Check if buffer count is greater than digitize count x 2
# to account for the subtraction portion of measurements
record(calcout, "$(P)$(R)BuffCntCalc"){
  field(ASG, "Reserved")
  field(DESC, "Buffer counter monitor calc")
  field(PRIO, "HIGH")
  field(INPA, "$(Instrument)CntBuff1-Mon CPP")
  field(INPB, "$(P)$(R)SampleCnt-RB.VAL")
  field(CALC, "((A>0)&&(A=(2*B)))?1:0")
  field(OOPT, "When Non-zero")
  field(OUT, "$(Instrument)ReadBuff1-Mon.PROC")
  field(FLNK, "$(P)$(R)BuffClear")
}

# Clear buffer after read was requested
record(calcout, "$(P)$(R)BuffClear"){
  field(ASG, "Reserved")
  field(DESC, "Clear buffer calc")
  field(PRIO, "HIGH")
  field(INPA, "$(Instrument)CntBuff1-Mon.VAL")
  field(INPB, "$(P)$(R)SampleCnt-RB.VAL")
  field(CALC, "(A>0)&&(A>=(2*B))")
  field(OOPT, "When Non-zero")
  field(OUT, "$(Instrument)ClrBuff1-Cmd PP")
}

# Raw readings array
record(waveform, "$(P)$(R)RawReadings-Mon"){
  field(ASG, "Reserved")
  field(DESC, "Raw readings array")
  field(FTVL, "DOUBLE")
  field(NELM, "1000")
  field(EGU, "nC")
  field(INP, "$(Instrument)ReadBuff1-Mon CPP")
  field(FLNK, "$(P)$(R)ReadingsCalc")
}

# Process readings: average and noise subtraction
record(acalcout, "$(P)$(R)ReadingsCalc"){
  field(ASG, "Reserved")
  field(DESC, "Readings filter calc")
  field(NELM, "1000")
  field(INAA, "$(P)$(R)RawReadings-Mon.VAL")
  field(INPB, "$(P)$(R)SampleCnt-RB.VAL")
  field(CALC, "CC:=AA[0,B-1];DD:=AA[B,2*B-1];AVG(AA[0,B-1])-AVG(AA[B,2*B-1])")
  field(OUT, "$(P)$(R)Charge-Mon PP")
  field(FLNK, "$(P)$(R)RawPulse-Mon")
}

# Raw BCM pulse waveform
record(waveform, "$(P)$(R)RawPulse-Mon"){
  field(ASG, "Reserved")
  field(DESC, "Raw BCM pulse waveform")
  field(NELM, "1000")
  field(FTVL, "DOUBLE")
  field(EGU, "nC")
  field(INP, "$(P)$(R)ReadingsCalc.CC")
  field(FLNK, "$(P)$(R)RawNoise-Mon")
}

# Raw noise waveform
record(waveform, "$(P)$(R)RawNoise-Mon"){
  field(ASG, "Reserved")
  field(DESC, "Raw noise waveform")
  field(NELM, "1000")
  field(FTVL, "DOUBLE")
  field(EGU, "nC")
  field(INP, "$(P)$(R)ReadingsCalc.DD")
}

# PV with last monitored Charge
record(ai, "$(P)$(R)Charge-Mon"){
  field(ASG, "Reserved")
  field(DESC, "Beam Charge")
  field(PREC, "6")
  field(EGU, "nC")
  field(ADEL, "-1")
  field(MDEL, "-1")
  field(FLNK, "$(P)$(R)ChargeHstr-Mon")
}

# Array with charge measurement history
record(compress, "$(P)$(R)ChargeHstr-Mon"){
  field(ASG, "Reserved")
  field(DESC, "History of beam charge readings")
  field(ALG, "Circular Buffer")
  field(NSAM, "1000")
  field(EGU, "nC")
  field(INP, "$(P)$(R)Charge-Mon")
}

########################################################################
# Digitize Settings
# Desc: Digitize parameters.

# Digitize count (high level)
record(longout, "$(P)$(R)SampleCnt-SP"){
  field(DESC, "Digitize count high level PV")
  field(DRVH, "1000000")
  field(DRVL, "1")
  field(OUT, "$(Instrument)DigtzeCnt-SP.VAL PP")
  field(FLNK, "$(P)$(R)SampleCntCalc")
}

# Set the last index of buffer to read twice the count value,
# since 2 x 'Count' samples are taken during digitizing
record(calcout, "$(P)$(R)SampleCntCalc"){
  field(ASG, "Reserved")
  field(DESC, "Calc sets last reading index in buffer")
  field(INPA, "$(P)$(R)SampleCnt-SP.VAL")
  field(CALC, "2*A")
  field(OUT, "$(Instrument)EndRead1-SP PP")
}

# Digitize count RB (high level)
record(longin, "$(P)$(R)SampleCnt-RB"){
  field(ASG, "Reserved")
  field(DESC, "Digitize count RB high level PV")
  field(INP, "$(Instrument)DigtzeCnt-RB CPP")
}

# Input Impedance (high level)
record(bo, "$(P)$(R)Imped-Sel"){
  field(DESC, "Input impedance high level PV")
  field(ZNAM, "AUTO")
  field(ONAM, "10MOhm")
  field(VAL, "0")
  field(OUT, "$(Instrument)DigtzeImpedance-Sel.VAL PP")
}

# Input Impedance Sts (high level)
record(bi, "$(P)$(R)Imped-Sts"){
  field(ASG, "Reserved")
  field(DESC, "Input impedance Sts high level PV")
  field(ZNAM, "AUTO")
  field(ONAM, "10MOhm")
  field(INP, "$(Instrument)DigtzeImpedance-Sts CPP")
}

# Digitize aperture (high level)
record(ao, "$(P)$(R)Aperture-SP"){
  field(DESC, "Digitize aperture high level PV")
  field(DRVH, "1000")
  field(DRVL, "1")
  field(EGU, "us")
  field(VAL, "1")
  field(OUT, "$(Instrument)DigtzeApert-SP PP")
}

# Digitize aperture RB (high level)
record(ai, "$(P)$(R)Aperture-RB"){
  field(ASG, "Reserved")
  field(DESC, "Digitize aperture RB high level PV")
  field(EGU, "us")
  field(INP, "$(Instrument)DigtzeApert-RB CPP")
}

# Digitize sample rate (high level)
record(longout, "$(P)$(R)SampleRate-SP"){
  field(DESC, "Digitize sampling rate")
  field(DRVH, "1000000")
  field(DRVL, "1000")
  field(EGU, "rdgs per sec")
  field(VAL, "1000000")
  field(OUT, "$(Instrument)DigtzeSR-SP PP")
}

# Digitize sample rate RB (high level)
record(longin, "$(P)$(R)SampleRate-RB"){
  field(ASG, "Reserved")
  field(DESC, "Digitize sampling rate RB")
  field(EGU, "rdgs per sec")
  field(INP, "$(Instrument)DigtzeSR-RB CPP")
}

########################################################################
# Charge Digitize Range
# Desc: Digitize range selection.

# ################################
# BCM Range
#
# DigIO line 3 = Range Bit 2 (MSB)
# DioIO line 6 = Range Bit 1
# DigIO line 4 = Range Bit 0 (LSB)
#
# ################################

# Beam Charge Monitor output full-scale range
record(ao, "$(P)$(R)BCMRange-SP"){
  field(DESC, "Set this equal to BCM max output volt")
  field(DRVH, "10")
  field(DRVL, "1")
  field(PREC, "6")
  field(EGU, "V")
  field(VAL, "8")
  field(FLNK, "$(P)$(R)Range-Sel")
}

# PV for range selection
record(mbbo, "$(P)$(R)Range-Sel"){
  field(DESC, "ICT range")
  field(ZRST, "40 nC")
  field(ONST, "20 nC")
  field(TWST, "10 nC")
  field(THST, "8 nC")
  field(FRST, "4 nC")
  field(FVST, "2 nC")
  field(SXST, "0.8 nC")
  field(FLNK, "$(P)$(R)ConvCalc")
}

# Calculation for setting conversion multiplier
record(calcout, "$(P)$(R)ConvCalc"){
  field(ASG, "Reserved")
  field(DESC, "Reading conversion factor")
  field(INPA, "$(P)$(R)Range-Sel.VAL")
  field(INPB, "$(P)$(R)BCMRange-SP.VAL")
  field(CALC, "A=6?(0.8/B):(A<3?(40.0/((2**A)*B)):(8.0/((2**(A-3)*B))))")
  field(OUT, "$(Instrument)DMathMFactor-SP PP")
  field(FLNK, "$(P)$(R)RangeCalc")
}

# Calculation for setting ICT sensor range
# Digital I/O mapping
# BCM Range B2 = DMM 'DigIO Line 3' 2
# BCM Range B1 = DMM 'DigIO Line 6' 1
# BCM Range B0 = DMM 'DigIO Line 4' 0
#
record(calcout, "$(P)$(R)RangeCalc"){
  field(ASG, "Reserved")
  field(DESC, "ICT range calc")
  field(INPA, "$(P)$(R)Range-Sel")
  field(INPB, "$(Instrument)DigRead-Mon")
  field(CALC, "(A=0?44:(A=1?36:(A=2?12:(A=3?40:(A=4?32:(A=5?8:0))))))|(B&19)")	# Preserve lines 5, 2, and 1. Set range lines.
  field(OUT, "$(Instrument)DigWrite-SP PP")
  field(FLNK, "$(P)$(R)ThreshUpdate")
}

# Level threshold update
record(calcout, "$(P)$(R)ThreshUpdate"){
  field(ASG, "Reserved")
  field(DESC, "Threshold update")
  field(INPA, "$(P)$(R)Threshold-RB")
  field(INPB, "$(P)$(R)Range-Sel")
  field(INPC, "$(P)$(R)BCMRange-SP.VAL")
  field(CALC, "B=6?((C/0.8)*A):(B<3?((((2**B)*C)/40.0)*A):((((2**(B-3))*C)/8.0)*A))")
  field(OUT, "$(Instrument)DATrEdgeLvl-SP PP")
  field(FLNK, "$(Instrument)DigRead-Mon.PROC")
}

# Range status calculation
record(scalcout, "$(P)$(R)RangeMonCalc"){
  field(ASG, "Reserved")
  field(DESC, "Calc of range from DigIO status")
  field(INPA, "$(Instrument)DigRead-Mon CPP")
  field(CALC, "B:=A&44;B=44?1:(B=36?2:(B=12?3:(B=40?4:((B=32||B=4)?5:(B=8?6:(B=0?7:0))))))")	# Remove non-range bits. Read range.
  field(OUT, "$(P)$(R)Range-Sts PP")
}

# Range status
record(mbbi, "$(P)$(R)Range-Sts"){
  field(ASG, "Reserved")
  field(DESC, "ICT range Sts")
  field(ZRST, "UNKNOWN")
  field(ONST, "40 nC")
  field(TWST, "20 nC")
  field(THST, "10 nC")
  field(FRST, "8 nC")
  field(FVST, "4 nC")
  field(SXST, "2 nC")
  field(SVST, "0.8 nC")
}

########################################################################
# BCM Calibration Settings
# Desc: Beam charge monitor calibration settings.

# ###############################
# BCM Calibration Enable
#
# DigIO line 1 = Enbl
#
# BCM Calibration Charge Selection
# 
# DigIO line 1 = Charge MSB
# DioIO line 5 = Charge LSB
#
# ###############################

# Calibration enable/disable
record(bo, "$(P)$(R)CalEnbl-Sel"){
  field(DESC, "Enable BCM calibration signal")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(FLNK, "$(P)$(R)CalEnblCalc")
}

# Set digital line 2 and OR it with other digital states
record(calcout, "$(P)$(R)CalEnblCalc"){
  field(ASG, "Reserved")
  field(DESC, "Enable BCM calibration calc")
  field(INPA, "$(P)$(R)CalEnbl-Sel")
  field(INPB, "$(Instrument)DigRead-Mon")
  field(CALC, "(A<<1)|(B&61)")				# Preserve other lines. Set line 2 accordingly.
  field(OUT, "$(Instrument)DigWrite-SP PP")
  field(FLNK, "$(Instrument)DigRead-Mon.PROC")
}

# Calibration enable monitor calc
record(calcout, "$(P)$(R)CalEnblMonCalc"){
  field(ASG, "Reserved")
  field(DESC, "BCM calibration monitor calc")
  field(INPA, "$(Instrument)DigRead-Mon CPP")
  field(CALC, "(A&2)=0?0:1")				# Filter other bits. Read calibration enable state.
  field(OUT, "$(P)$(R)CalEnbl-Sts PP")
}

record(bi, "$(P)$(R)CalEnbl-Sts"){
  field(ASG, "Reserved")
  field(DESC, "BCM calibration enable Sts")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

# Calibration charge selection
record(mbbo, "$(P)$(R)CalCharge-Sel"){
  field(DESC, "Calibration charge")
  field(ZRST, "1 nC")
  field(ONST, "100 pC")
  field(TWST, "10 pC")
  field(THST, "1 pC")
  field(VAL, "0")
  field(FLNK, "$(P)$(R)CalChargeCalc")
}

# Calibration charge selection calc
record(calcout, "$(P)$(R)CalChargeCalc"){
  field(ASG, "Reserved")
  field(DESC, "Calibration charge calc")
  field(INPA, "$(P)$(R)CalCharge-Sel")
  field(INPB, "$(Instrument)DigRead-Mon")
  field(CALC, "(A=0?17:(A=1?1:(A=2?16:0)))|(B&46)")	# Preserve other lines. Set lines 1 and 5 accordingly.
  field(OUT, "$(Instrument)DigWrite-SP PP")
  field(FLNK, "$(Instrument)DigRead-Mon.PROC")
}

# Calibration charge selection monitor calc
record(calcout, "$(P)$(R)CalChargeMonCalc"){
  field(ASG, "Reserved")
  field(DESC, "Calibration charge monitor calc")
  field(INPA, "$(Instrument)DigRead-Mon CPP")
  field(CALC, "B:=A&17;B=17?0:(B=1?1:(B=16?2:3))")	# Filter other bits. Read charge selection.
  field(OUT, "$(P)$(R)CalCharge-Sts PP")
}

# Calibration charge selection Sts
record(mbbi, "$(P)$(R)CalCharge-Sts"){
  field(ASG, "Reserved")
  field(DESC, "Calibration charge Sts")
  field(ZRST, "1 nC")
  field(ONST, "100 pC")
  field(TWST, "10 pC")
  field(THST, "1 pC")
}

########################################################################
# Level Threshold
# Desc: Level threshold used by analog trigger.

# Level trigger threshold
record(ao, "$(P)$(R)Threshold-SP"){
  field(DESC, "Threshold level")
  field(DRVH, "40")
  field(DRVL, "0")
  field(PREC, "6")
  field(EGU, "nC")
  field(FLNK, "$(P)$(R)ThreshCalc")
}

# Threshold unit conversion
record(calcout, "$(P)$(R)ThreshCalc"){
  field(ASG, "Reserved")
  field(DESC, "Threshold unit conversion calc")
  field(INPA, "$(P)$(R)Threshold-SP")
  field(INPB, "$(P)$(R)Range-Sts")
  field(INPC, "$(P)$(R)BCMRange-SP.VAL")
  field(CALC, "B=0?0:1")
  field(OCAL, "D:=B-1;D=6?((C/0.8)*A):(D<3?((((2**D)*C)/40.0)*A):((((2**(D-3))*C)/8.0)*A))")
  field(DOPT, "Use OCAL")
  field(OOPT, "When Non-zero")
  field(OUT, "$(Instrument)DATrEdgeLvl-SP PP")
}

# Monitor calc for analog trigger level
record(calcout, "$(P)$(R)ThreshMonCalc"){
  field(ASG, "Reserved")
  field(DESC, "Threshold level read calc")
  field(INPA, "$(Instrument)DATrEdgeLvl-RB CPP")
  field(INPB, "$(P)$(R)Range-Sts")
  field(INPC, "$(P)$(R)BCMRange-SP.VAL")
  field(CALC, "B=0?0:1")
  field(OCAL, "D:=B-1;D=6?(A*(0.8/C)):(D<3?(A*(40.0/((2**D)*C))):(A*(8.0/((2**(D-3))*C))))")
  field(DOPT, "Use OCAL")
  field(OOPT, "When Non-zero")
  field(OUT, "$(P)$(R)Threshold-RB PP")
}

# Level triggering threshold
record(ai, "$(P)$(R)Threshold-RB"){
  field(ASG, "Reserved")
  field(DESC, "Threshold level RB")
  field(EGU, "nC")
  field(PREC, "6")
}

# High frequency rejection (high level)
record(bo, "$(P)$(R)HFReject-Sel"){
  field(DESC, "High freq rejection high level PV")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "$(Instrument)DATrHFR-Sel PP")
}

# High frequency rejection Sts (high level)
record(bi, "$(P)$(R)HFReject-Sts"){
  field(ASG, "Reserved")
  field(DESC, "High freq rejection Sts high level PV")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(INP, "$(Instrument)DATrHFR-Sts CPP")
}

########################################################################
# Measurement Reliability
# Desc: Combine critical parameters in one status.

# Measurement reliability
record(calcout, "$(P)$(R)ReliableMeas-Mon"){
  field(DESC, "Measurement reliability")
  field(INPA, "$(Instrument)ACalWarn-Mon CPP")
  field(INPB, "$(Instrument)Network-Mon CPP")
  field(INPC, "$(P)$(R)SampleTrg-Sts CPP")
  field(CALC, "((A&1)<<2)|(((!B)&1)<<1)|(C=!1&&C!=2&&C!=3)")
  field(HIHI, "1")
  field(HHSV, "MAJOR")
}

# Measurement reliability strings
# Initialized by sequencer program (sncDMM7510)
record(waveform, "$(P)$(R)ReliableMeasLabels-Cte"){
  field(DESC, "Labels for each bit in ReliableMeas-Mon")
  field(FTVL, "STRING")
  field(NELM, "3")
}

########################################################################
# Save
# Desc: Save 'Sel' and 'SP' PV values.

record(bo, "$(P)$(R)Save-Cmd"){
  field(DESC, "Save PVs values cmd")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(HIGH, "0.5")
  field(FLNK, "$(P)$(R)SaveTrg")
}

# This PV is monitored by autosave
record(calc, "$(P)$(R)SaveTrg"){
  field(ASG, "Reserved")
  field(DESC, "Save PVs values trigger")
  field(INPA, "$(P)$(R)Save-Cmd.VAL")
  field(CALC, "A=1?!VAL:VAL")
  field(VAL, "0")
}

########################################################################
# Multimeter Setup
# Desc: Instrument initialization.

# ----------------------------------------------------------
# Parameter Download Sequence
# Desc: Defines the processing order during download.
# ----------------------------------------------------------

# Auto download after reconnection
record(calcout, "$(P)$(R)AutoDownload"){
  field(DESC, "Auto download after reconnection")
  field(INPA, "$(Instrument)Network-Mon CPP")
  field(CALC, "A")
  field(OOPT, "Transition To Non-zero")
  field(OCAL, "1")
  field(DOPT, "Use OCAL")
  field(ODLY, "6") # give some time to the multimeter after connection
  field(OUT, "$(P)$(R)Download-Cmd PP")
}

# Download command
record(bo, "$(P)$(R)Download-Cmd"){
  field(DESC, "Download IOC parameters cmd")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(HIGH, "10")
  field(VAL, "1")
  field(PINI, "YES")
  field(FLNK, "$(P)$(R)DownloadCalc")
}

record(calcout, "$(P)$(R)DownloadCalc"){
  field(ASG, "Reserved")
  field(DESC, "Download confirmation calc")
  field(INPA, "$(P)$(R)Download-Cmd.VAL")
  field(CALC, "A")
  field(OOPT, "When Non-zero")
  field(OUT, "$(P)$(R)DownloadSeq1.PROC")
}

record(sseq, "$(P)$(R)DownloadSeq1"){
  field(ASG, "Reserved")
  field(DESC, "Download sequence 1")
  field(SELM, "All")
  field(STR1, "ON")
  field(STR2, "DIGITIZE_VOLTAGE")
  field(DO3, "10")
  field(STR4, "DC")
  field(STR5, "TIMER1")
  field(DO6, "1")
  field(DO7, "1")
  field(DO8, "1")
  field(DO9, "1")
  field(DOA, "1")
  field(LNK1, "$(Instrument)Reset-Cmd PP")		# reset
  field(LNK2, "$(Instrument)DigtzeFnc-Sel PP")		# Digitize function = DIGITIZE_VOLTAGE
  field(LNK3, "$(Instrument)DRange-SP PP")		# Digitize range = 10 V
  field(LNK4, "$(Instrument)DigtzeCoup-Sel PP")		# Digitize coupling = DC
  field(LNK5, "$(Instrument)DigtzeStim-Sel PP")		# Digitize stimulus = TIMER 1
  field(LNK6, "$(P)$(R)SampleRate-SP.PROC")		# Digitize sample rate high level proc
  field(LNK7, "$(P)$(R)SampleCnt-SP.PROC")		# Digitize count high level proc
  field(LNK8, "$(P)$(R)Aperture-SP.PROC")		# Digitize aperture high level proc
  field(LNK9, "$(P)$(R)Imped-Sel.PROC")			# Digitize input impedance high level proc
  field(LNKA, "$(Instrument)StartRead1-SP PP")		# Start index for buffer reading = 1
  field(FLNK, "$(P)$(R)DownloadSeq2")
}

record(sseq, "$(P)$(R)DownloadSeq2"){
  field(ASG, "Reserved")
  field(DESC, "Download sequence 2")
  field(SELM, "All")
  field(STR1, "DIGOUT")
  field(STR2, "DIGOUT")
  field(STR3, "DIGOUT")
  field(STR4, "DIGOUT")
  field(STR5, "DIGOUT")
  field(STR6, "DIGOUT")
  field(DO7, "1")
  field(STR8, "y=mx+b")
  field(DO9, "0")
  field(STRA, "ON")
  field(LNK1, "$(Instrument)Dig1Mod-Sel PP")		# DigIO 1 Mode = DIG_OUT
  field(LNK2, "$(Instrument)Dig2Mod-Sel PP")		# DigIO 2 Mode = DIG_OUT
  field(LNK3, "$(Instrument)Dig3Mod-Sel PP")		# DigIO 3 Mode = DIG_OUT
  field(LNK4, "$(Instrument)Dig4Mod-Sel PP")		# DigIO 4 Mode = DIG_OUT
  field(LNK5, "$(Instrument)Dig5Mod-Sel PP")		# DigIO 5 Mode = DIG_OUT
  field(LNK6, "$(Instrument)Dig6Mod-Sel PP")		# DigIO 6 Mode = DIG_OUT
  field(LNK7, "$(P)$(R)Range-Sel.PROC")               	# Range
  field(LNK8, "$(Instrument)DMathOp-Sel PP")		# Math format = y=mx+b                  
  field(LNK9, "$(Instrument)DMathBFactor-SP PP")	# Math B factor = 0
  field(LNKA, "$(Instrument)DMathEnbl-Sel PP")		# Math enable = ON
  field(DLY8, "2")					# Wait 2 seconds for Range-Sts to be set
  field(FLNK, "$(P)$(R)DownloadSeq3")
}

record(sseq, "$(P)$(R)DownloadSeq3"){
  field(ASG, "Reserved")
  field(DESC, "Download sequence 3")
  field(SELM, "All")
  field(DO1, "1")
  field(STR2, "Edge")
  field(DO3, "1")
  field(STR4, "RISING")
  field(STR5, "Rising")
  field(DO6, "1")
  field(DO7, "1")
  field(STR8, "Start and elapse")
  field(DO9, "1")
  field(LNK1, "$(P)$(R)Threshold-SP.PROC")		# Level threshold proc (Analog Trig level)
  field(LNK2, "$(Instrument)DATrMode-Sel PP")		# Analog trigger mode = Edge
  field(LNK3, "$(P)$(R)HFReject-Sel.PROC")		# High Freq rejection proc (Analog Trg HR reject)
  field(LNK4, "$(Instrument)ExInEdge-Sel PP")		# External Input trigger edge = RISING
  field(LNK5, "$(Instrument)DATrEdgeSlp-Sel PP")	# Digitize analog trigger edge slope = Rising
  field(LNK6, "$(P)$(R)2ndReadDly-SP.PROC")		# Timer 1 delay proc
  field(LNK7, "$(Instrument)Timer1Cnt-SP PP")		# Timer 1 count = 1
  field(LNK8, "$(Instrument)Timer1Gen-Sel PP")		# Timer 1 event generation = Start and elapse
  field(LNK9, "$(P)$(R)SampleTrgRst.VAL PP")          	# Reset DigtzeTrgCalc so that next time it will process
  field(FLNK, "$(P)$(R)DownloadSeq4")
}

record(sseq, "$(P)$(R)DownloadSeq4"){
  field(ASG, "Reserved")
  field(DESC, "Download sequence 4")
  field(SELM, "All")
  field(DO1, "1")
  field(DO2, "1")
  field(STR3, "HIGH")
  field(LNK1, "$(P)$(R)CalCharge-Sel.PROC")		# ICT calibration charge proc
  field(LNK2, "$(P)$(R)CalEnbl-Sel.PROC")		# ICT calibration enable proc
  field(LNK3, "$(Instrument)CntBuff1-Mon.PRIO")		# Buffer monitor priority = HIGH
  field(DLY2, "2")					# Wait the cal. charge setting process to finish
}

